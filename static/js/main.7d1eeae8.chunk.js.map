{"version":3,"sources":["state/action-types/index.js","logo.svg","assets/img/Google.svg.png","assets/img/ga.png","page/home-page/index.js","components/sideBar/SideBar.jsx","assets/img/nako.png","components/navbar/index.js","hooks/useTracker.js","router/router.js","App.js","reportWebVitals.js","i18n.js","index.js","state/store.js","state/reducer/accountReducer.js","state/reducer/translateReducer.js","state/reducer/themeReducer.js","state/reducer/authReducer.js","state/reducer/index.js","hooks/useEventTracker.js","state/action-creators/translateAction.js","state/action-creators/themeAction.js","state/action-creators/authAction.js","state/action-creators/index.js","hooks/useActions.js"],"names":["ActionTypes","SET_USER_LOGIN","SET_USER_LOGIN_SUCCESS","SET_USER_LOGIN_FAILED","SET_USER_LOGIN_ERROR_MESSAGE","CLEAN_LOGIN_ERROR_MESSAGE","SET_USER_LOGOUT","SET_THEME_SWITCH","SET_THEME_DARK","SET_THEME_LIGHT","SET_TOPIC_LANGUAGE","Home","theme","useSelector","state","className","src","logo","alt","style","display","Google","width","height","GA","color","SideBar","show","setShow","darkTheme","t","useTranslation","toggleDrawer","open","event","type","key","menuList","text","icon","root","Drawer","anchor","onClose","Box","sx","backgroundColor","role","onClick","onKeyDown","List","map","item","index","ListItemButton","button","window","location","href","ListItemIcon","ListItemText","primary","Divider","ListItem","TopBar","useLogin","useTranslate","i18n","useActions","translate","switchMode","logout","auth","avatar","username","useState","menuEl","setMenuEl","userEl","setUserEl","mobileAnchorEl","setMobileAnchorEl","checked","setChecked","menuId","showSideMenu","setShowSideMenu","handleClick","preventDefault","currentTarget","handleMenuClose","changeLanguage","lng","language","eventTracker","handleSwitch","e","bool","target","userAuth","IconButton","size","edge","Avatar","renderUserMenu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","Boolean","MenuItem","confirm","renderMobileMenu","FormControlLabel","control","Switch","onChange","label","Button","disableElevation","renderMenu","flexGrow","AppBar","position","Toolbar","mr","xs","sm","md","neko","Typography","variant","component","marginLeft","defaultProps","ReactGA","initialize","process","useTracker","WrappedComponent","options","trackPage","page","set","pageview","HOC","props","useEffect","pathname","lazy","LoginPage","News","AccountPage","BaseRouter","fallback","exact","path","App","Dark","Light","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","tw","jp","use","Backend","LanguageDetector","initReactI18next","init","caches","localStorage","getItem","fallbackLng","interpolation","escapeValue","react","useSuspense","ReactDOM","render","StrictMode","store","loading","persistor","document","getElementById","persistConfig","storage","stateReconciler","autoMergeLevel2","timeout","myPersistReducer","persistReducer","reducers","createStore","applyMiddleware","thunk","logger","persistStore","reducer","action","payload","DARK_STATE","sideBar","navbar","LIGHT_STATE","INIT_STATE","token","error_message","combineReducers","account","accountReducer","translateReducer","themeReducer","authReducer","category","value","dispatch","setThemeDark","setThemeLight","user","password","authDemo","console","log","Promise","resolve","reject","Error","login","a","data","cleanError","depositMoney","amount","withdrawMoney","useDispatch","useMemo","bindActionCreators","actionCreator"],"mappings":"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","file":"static/js/main.7d1eeae8.chunk.js","sourcesContent":["export const ActionTypes = {\r\n\r\n    //POPPER TABLE TYPES\r\n    SET_USER_LOGIN: 'SET_USER_LOGIN',\r\n    SET_USER_LOGIN_SUCCESS:\"SET_USER_LOGIN_SUCCESS\",\r\n    SET_USER_LOGIN_FAILED:\"SET_USER_LOGIN_FAILED\",\r\n    SET_USER_LOGIN_ERROR_MESSAGE:\"SET_USER_LOGIN_ERROR_MESSAGE\",\r\n    CLEAN_LOGIN_ERROR_MESSAGE:\"CLEAN_LOGIN_ERROR_MESSAGE\",\r\n    SET_USER_LOGOUT: 'SET_USER_LOGOUT',\r\n    //theme switch\r\n    SET_THEME_SWITCH: 'SET_THEME_SWITCH',\r\n    SET_THEME_DARK:\"SET_THEME_DARK\",\r\n    SET_THEME_LIGHT:\"SET_THEME_LIGHT\",\r\n    //translation\r\n    SET_TOPIC_LANGUAGE: 'SET_TOPIC_LANGUAGE',\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/Google.svg.221f782d.png\";","export default __webpack_public_path__ + \"static/media/ga.5e34e750.png\";","import React from 'react'\r\nimport {useEffect} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\nimport {useState} from \"react\";\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport logo from '../../logo.svg';\r\nimport Google from '../../assets/img/Google.svg.png';\r\nimport GA from '../../assets/img/ga.png';\r\n\r\nfunction Home() {\r\n\r\n    const theme = useSelector((state)=>state.theme)\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <div style={{display:'flex'}}>\r\n                <img src={Google} className=\"App-logo1\" alt=\"logo\" width=\"100\" height=\"100\" />\r\n                <img src={GA} className=\"App-logo1\" alt=\"logo\" width=\"150\" height=\"150\" />\r\n            </div>\r\n            <h1 style={{color:theme===\"Dark\"?\"aqua\":\"purple\"}}>REACT TEST WITH GOOGLE ANALYTICS</h1>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport NewReleasesIcon from '@mui/icons-material/NewReleases';\r\nimport FeaturedPlayListIcon from '@mui/icons-material/FeaturedPlayList';\r\nimport AutoAwesomeMosaicIcon from '@mui/icons-material/AutoAwesomeMosaic';\r\nimport { useTranslation} from 'react-i18next';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nfunction SideBar({show,setShow}) {\r\n\r\n    let theme = useSelector((state)=>state.theme);\r\n\r\n    let darkTheme = {\"Dark\":\"#4B4B4B\"};\r\n\r\n    const {t} =useTranslation();\r\n\r\n    const toggleDrawer = (open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        setShow(open);\r\n      };\r\n\r\n    const menuList = [\r\n      {text: 'home', icon:<HomeIcon />,root:\"/\"},\r\n      {text: 'new', icon:<NewReleasesIcon />,root:\"/news\"},\r\n      {text: 'feature', icon:<FeaturedPlayListIcon />,root:\"#\"},\r\n      {text: 'project', icon:<AutoAwesomeMosaicIcon />,root:\"#\"},\r\n    ];\r\n\r\n    const list = (anchor) => (\r\n        <Box\r\n\r\n          sx={{ \r\n            backgroundColor:darkTheme[theme],\r\n            color:theme===\"Dark\"?\"white\":\"\",\r\n            height:\"100vh\",\r\n            width:250\r\n          }}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(false)}\r\n          onKeyDown={toggleDrawer(false)}\r\n        >\r\n          <List >\r\n            {menuList.map((item, index) => (\r\n              <ListItemButton button=\"true\" key={index} onClick={()=>window.location.href=\"#\"+item.root}>\r\n                <ListItemIcon sx={{ color: 'inherit' }} >\r\n                  {item.icon}\r\n                </ListItemIcon>\r\n                <ListItemText primary={t(`sideMenu.${item.text}`)}/>\r\n              </ListItemButton>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>\r\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                </ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      );\r\n    \r\n    return (\r\n        <Drawer\r\n            anchor=\"left\"\r\n            open={show}\r\n            onClose={toggleDrawer(false)}\r\n          >\r\n            {list(\"left\")}\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","export default __webpack_public_path__ + \"static/media/nako.4ef9cc15.png\";","import {useState} from \"react\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport {Menu,MenuItem} from '@mui/material'\r\nimport Switch from '@mui/material/Switch';\r\nimport SideBar from \"../sideBar/SideBar\"\r\nimport neko from \"../../assets/img/nako.png\"\r\nimport { useTranslation} from 'react-i18next';\r\nimport {useSelector} from \"react-redux\"\r\nimport { useActions } from \"../../hooks/useActions\";\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport MoreIcon from '@mui/icons-material/MoreVert';\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PropTypes from 'prop-types';\r\n\r\n//GA TRACK EVENT\r\nimport {eventTracker} from '../../hooks/useEventTracker';\r\n// const {REACT_APP_GA_TRACKING_CODE} = process.env\r\n// ReactGA.initialize(REACT_APP_GA_TRACKING_CODE);\r\n// ReactGA.pageview(window.location.pathname + window.location.search);\r\nfunction TopBar({\r\n    useLogin,\r\n    useTranslate\r\n}) {\r\n    //i18n\r\n    const { t,i18n } = useTranslation();\r\n    //redux store\r\n    const {translate,switchMode,logout} =  useActions();\r\n    const theme = useSelector(state => state.theme);//String\r\n    const {auth,avatar,username} = useSelector(state => state.auth);//Boolean\r\n\r\n    //local state\r\n    const [menuEl, setMenuEl] = useState(null);\r\n    const [userEl,setUserEl] = useState(null);\r\n    const [mobileAnchorEl, setMobileAnchorEl] = useState(null);\r\n    const [checked, setChecked] = useState(theme===\"Dark\");\r\n    const menuId = 'primary-search-account-menu';\r\n    const [showSideMenu,setShowSideMenu] = useState(false);\r\n    const darkTheme={\"Dark\":\"#1D1B8C\",}\r\n    \r\n    //function\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        setMenuEl(event.currentTarget);\r\n    };\r\n\r\n    //Mobile menu\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileAnchorEl(event.currentTarget);\r\n    };\r\n    const handleMobileMenuClose = () => {\r\n        setMobileAnchorEl(null);\r\n    };\r\n    //user action\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n        // eslint-disable-next-line no-restricted-globals\r\n        var ok = confirm(t(\"appbar.logout_check\"))\r\n        if(ok) logout();\r\n        setUserEl(null);\r\n        eventTracker(\"user action\",\"user logout\")\r\n    };\r\n\r\n    const handleUserMenuOpen = (event) => {\r\n        setUserEl(event.currentTarget);\r\n    };\r\n    const handleMenuClose = () => {\r\n        setUserEl(null);\r\n    };\r\n    const handleSideMenu=()=>{\r\n        setShowSideMenu(true)\r\n    };\r\n    \r\n    const changeLanguage = (lng) => {\r\n        if(lng!==i18n.language) {\r\n            i18n.changeLanguage(lng);\r\n            translate(lng)\r\n            eventTracker(\"user action\",\"translate\");\r\n        }\r\n        setMenuEl(null);\r\n    };\r\n    //--theme control\r\n    const handleSwitch=(e)=>{\r\n        e.preventDefault();\r\n        let bool = e.target.checked;\r\n        setChecked(bool);\r\n        switchMode(bool?\"Dark\":\"Light\");\r\n    };\r\n\r\n    const userAuth=(\r\n        <IconButton\r\n            size=\"large\"\r\n            edge=\"end\"\r\n            aria-label=\"account of current user\"\r\n            aria-controls={menuId}\r\n            aria-haspopup=\"true\"\r\n            onClick={handleUserMenuOpen}\r\n            color=\"inherit\"\r\n        >\r\n            {/* <AccountCircle /> */}\r\n            <Avatar alt=\"Remy Sharp\" src={avatar} />\r\n        </IconButton>\r\n    );\r\n\r\n    const renderUserMenu = (\r\n        <Menu\r\n          anchorEl={userEl}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          id={menuId}\r\n          keepMounted\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          open={Boolean(userEl)}\r\n          onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>{username}</MenuItem>\r\n            <MenuItem onClick={()=>{\r\n              eventTracker(\"user action\",\"to user account page\")\r\n              window.location.href=\"#/account\"}\r\n            }>\r\n                {t(\"account.account\")}\r\n            </MenuItem>\r\n           <MenuItem onClick={handleLogout }>{t(\"appbar.Logout\")}</MenuItem>\r\n        </Menu>\r\n      );\r\n\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileAnchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={Boolean(mobileAnchorEl)}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n        <MenuItem>\r\n            <FormControlLabel \r\n                control={<Switch  checked={checked} color=\"default\" onChange={handleSwitch}/>} \r\n                label={t(`appbar.${theme}`)} \r\n            />\r\n        </MenuItem>\r\n         {useTranslate?(\r\n          <MenuItem>\r\n            <Button color=\"inherit\" onClick={handleClick} disableElevation >\r\n                {t(\"appbar.current\")}\r\n            </Button>\r\n        </MenuItem>):null}\r\n        {useLogin ? (\r\n            <MenuItem>\r\n            {auth ?\r\n                userAuth:(\r\n                <Button color=\"inherit\" href=\"#/login\">\r\n                    {t(\"appbar.Login\")}\r\n                </Button>\r\n                )}\r\n            </MenuItem>\r\n            ):null}\r\n    </Menu>\r\n    );\r\n\r\n    const renderMenu = (\r\n        <Menu\r\n            id=\"demo-positioned-menu\"\r\n            aria-labelledby=\"demo-positioned-button\"\r\n            anchorEl={menuEl}\r\n            open={Boolean(menuEl)}\r\n            onClose={()=>setMenuEl(null)}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n        >\r\n            <MenuItem onClick={()=>changeLanguage(\"en\")}>{t(\"appbar.english\")}</MenuItem>\r\n            <MenuItem onClick={()=>changeLanguage(\"zh-TW\")}>{t(\"appbar.taiwan\")}</MenuItem>\r\n            <MenuItem onClick={()=>changeLanguage(\"zh-CN\")}>{t(\"appbar.china\")}</MenuItem>\r\n            <MenuItem onClick={()=>changeLanguage(\"jp\")}>{t(\"appbar.japan\")}</MenuItem>\r\n      </Menu>\r\n    );\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 5 }}>\r\n            <AppBar position=\"static\" sx={{backgroundColor:darkTheme[theme]}}>\r\n            <Toolbar >\r\n                <IconButton\r\n                    size=\"large\"\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"menu\"\r\n                    sx={{ mr: 2 }}\r\n                    onClick={handleSideMenu}\r\n                    >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Box sx={{ flexGrow: 0,display:{xs:\"none\",sm:\"none\",md:\"block\"} }}>\r\n                    <img src={neko} width={50} alt=\"logo\" />\r\n                </Box>\r\n                <Typography \r\n                    variant=\"h6\" component=\"div\" \r\n                    sx={{ flexGrow: 0,marginLeft:2}}\r\n                    onClick={()=>window.location.href=\"/\"}\r\n                >\r\n                    {t(\"appbar.title\")}\r\n                </Typography>\r\n                <Box sx={{ flexGrow: 1 }} />\r\n                <Box sx={{ flexGrow: 0,display:{xs:\"none\",sm:\"block\"}}} >\r\n                    <FormControlLabel \r\n                        control={<Switch  checked={checked} color=\"default\" onChange={handleSwitch}/>} \r\n                        label={t(`appbar.${theme}`)} \r\n                    />\r\n\r\n                    {useTranslate?(\r\n                        <Button color=\"inherit\" onClick={handleClick} disableElevation >\r\n                            {t(\"appbar.current\")}\r\n                        </Button>\r\n                        ):null}\r\n\r\n                    {useLogin ? (\r\n                        auth ? \r\n                        userAuth:(\r\n                            <Button color=\"inherit\" href=\"#/login\">{t(\"appbar.Login\")}</Button>\r\n                            )\r\n                        ):null}\r\n                </Box>\r\n                <Box sx={{ display: { xs: 'flex', sm: 'none' } }}>\r\n                    <IconButton\r\n                    size=\"large\"\r\n                    aria-label=\"show more\"\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleMobileMenuOpen}\r\n                    color=\"inherit\"\r\n                    >\r\n                    <MoreIcon />\r\n                    </IconButton>\r\n                </Box>\r\n            </Toolbar>\r\n            {<SideBar show={showSideMenu} setShow={setShowSideMenu}/>}\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n            {renderUserMenu}\r\n        </AppBar>\r\n      </Box>\r\n    );\r\n};\r\n\r\n\r\nTopBar.propTypes = {\r\n    useLogin: PropTypes.bool,\r\n    useTranslate: PropTypes.bool,\r\n};\r\n\r\nTopBar.defaultProps = {\r\n    useLogin: true,\r\n    useTranslate: true,\r\n};\r\n\r\nexport default TopBar;\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport ReactGA from \"react-ga\";\r\n\r\nconst {REACT_APP_GA_TRACKING_CODE} = process.env\r\n\r\nReactGA.initialize(REACT_APP_GA_TRACKING_CODE);\r\n\r\nconst useTracker=(WrappedComponent, options = {}) => {\r\n  const trackPage = page => {\r\n    ReactGA.set({\r\n      page,\r\n      ...options\r\n    });\r\n    ReactGA.pageview(page);\r\n  };\r\n\r\n  const HOC = props => {\r\n    useEffect(() => trackPage(props.location.pathname), [\r\n      props.location.pathname\r\n    ]);\r\n\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n\r\n  return HOC;\r\n};\r\n\r\nexport default useTracker;","import React,{Suspense,Fragment,lazy} from 'react'\r\nimport { Route,Switch } from \"react-router-dom\";\r\n// import {Home,LoginPage,News,AccountPage} from \"../components\"\r\nimport loadable from '@loadable/component'\r\nimport useTracker from '../hooks/useTracker';\r\n// const {Home,LoginPage,News,AccountPage}= lazy(()=>import(\"../components/index\"));\r\n// const Home = loadable(()=>import(\"../components/home\"))\r\n// const LoginPage = loadable(()=>import(\"../components/login\"))\r\n// const News = loadable(()=>import(\"../components/news\"))\r\n// const AccountPage = loadable(()=>import(\"../components/user\"))\r\nconst Home = lazy(()=>import(\"../page/home-page\"))\r\nconst LoginPage = lazy(()=>import(\"../page/login-page\"))\r\nconst News = lazy(()=>import(\"../page/news-page\"))\r\nconst AccountPage = lazy(()=>import(\"../page/user-page\"))\r\n\r\n\r\nconst BaseRouter = () => (\r\n        <Switch>\r\n            <Suspense fallback={<Fragment>Loading...</Fragment>}>\r\n                <Route exact path ={'/'} component={useTracker(Home) } />\r\n                <Route exact path={\"/login\"} component={useTracker(LoginPage) } />\r\n                <Route exact path={\"/account\"} component={useTracker(AccountPage) } />\r\n                <Route exact path={\"/news\"} component={useTracker(News) } />\r\n            </Suspense>\r\n        </Switch>\r\n);\r\n\r\nexport default BaseRouter;","\r\nimport './App.css';\r\nimport TopBar from \"./components/navbar\"\r\nimport BaseRouter from './router/router'\r\nimport { BrowserRouter as Router,HashRouter} from 'react-router-dom'\r\nimport Box from '@mui/material/Box';\r\n// import { useTranslation} from 'react-i18next';\r\nimport {useSelector} from \"react-redux\"\r\nimport  Home from \"./page/home-page\"\r\n\r\nfunction App() {\r\n  const theme = useSelector((state)=>state.theme);\r\n  const themeStyle = {\r\n    Dark: '#282c34',\r\n    Light:\"#F3F3F3\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{backgroundColor:themeStyle[theme]}}>\r\n      <HashRouter>\r\n        <TopBar /> \r\n          <Box sx={{width:'100%',minHeight: '100vh'}}>\r\n            <BaseRouter />\r\n            <Home/>\r\n          </Box>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport en from \"./assets/i18n/en/en.json\"\r\nimport tw from \"./assets/i18n/zh-tw/tw.json\"\r\nimport jp from \"./assets/i18n/jp/jp.json\"\r\nimport cn from \"./assets/i18n/zh-cn/cn.json\"\r\n\r\nconst resources={\r\n    en:{\r\n        translation:en\r\n    },\r\n    \"zh-TW\":{\r\n        translation:tw\r\n    },\r\n    \"zh-CN\":{\r\n        translation:cn\r\n    },\r\n    \"jp\":{\r\n        translation:jp\r\n    }\r\n};\r\n\r\ni18n\r\n.use(Backend)\r\n.use(LanguageDetector)\r\n// pass the i18n instance to react-i18next.\r\n.use(initReactI18next)\r\n.init({\r\n    resources,\r\n    caches: [\"localStorage\"],\r\n    lng: localStorage.getItem(\"i18nextLng\"),             //預設語言\r\n    fallbackLng: 'en',     //如果當前切換的語言沒有對應的翻譯則使用這個語言，\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },    \r\n    react: {\r\n        useSuspense: false\r\n      }\r\n});\r\n  \r\nexport default i18n;","import React,{Fragment} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\"//let full app can use store\r\nimport store from \"./state/store\" // our store\r\nimport {persistor} from './state/store'\r\nimport {PersistGate} from 'redux-persist/lib/integration/react';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>                          \r\n      <PersistGate loading={<Fragment />} persistor={persistor}>\r\n          <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import {createStore,applyMiddleware} from 'redux'\r\nimport reducers from './reducer/index'\r\nimport thunk from 'redux-thunk'//thunk 讓function去包裝另一個function的並呼叫的概念\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport localStorage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport logger from \"redux-logger\";\r\n\r\nconst persistConfig = {\r\n    key: 'temp-root',//can change\r\n    storage: localStorage,\r\n    stateReconciler: autoMergeLevel2, // 檢視 'Merge Process' 部分的具體情況\r\n    timeout:null,\r\n};\r\n\r\nconst myPersistReducer = persistReducer(persistConfig, reducers);\r\nconst store = createStore(\r\n    // reducers,\r\n    // {},\r\n    myPersistReducer,\r\n    applyMiddleware(thunk,logger)\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","const reducer =(state=0,action)=>{\r\n    switch(action.type){\r\n        case \"deposit\": //存錢\r\n            return state + action.payload;\r\n        case \"withdraw\"://領款\r\n            return state-action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { ActionTypes } from \"../action-types\";\r\n\r\nconst reducer =(state=\"en\",action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.SET_TOPIC_LANGUAGE:\r\n            return state = action.language\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { ActionTypes } from \"../action-types\";\r\n\r\nconst DARK_STATE={\r\n    theme:\"#282c34\",\r\n    sideBar:\"#4B4B4B\",\r\n    navbar:\"#1D1B8C\"\r\n};\r\nconst LIGHT_STATE ={\r\n    theme:\"#F3F3F3\",\r\n    sideBar:\"\",\r\n    navbar:\"\"\r\n};\r\n\r\nconst reducer =(state=\"Light\",action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.SET_THEME_SWITCH:\r\n            return state = action.theme\r\n        case ActionTypes.SET_THEME_DARK:\r\n            return state = {...DARK_STATE};\r\n        case ActionTypes.SET_THEME_LIGHT:\r\n            return state = {...LIGHT_STATE};\r\n        default:\r\n            return state\r\n    };\r\n};\r\n\r\nexport default reducer;","import { ActionTypes } from \"../action-types\";\r\n\r\nconst  INIT_STATE ={\r\n    auth:false,\r\n    username:null,\r\n    token:\"\",\r\n    error_message:\"\",\r\n    avatar:\"\"\r\n}\r\n\r\nconst reducer = (state = INIT_STATE,action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.SET_USER_LOGIN_SUCCESS: //登入確認\r\n            return {\r\n                ...state,\r\n                auth: true,\r\n                username: action.username,\r\n                avatar:action.avatar,\r\n                token:action.token\r\n            }\r\n        case ActionTypes.SET_USER_LOGOUT: //登出\r\n            return {\r\n                ...INIT_STATE,\r\n                auth:false,\r\n                avatar:\"\"\r\n            };\r\n            \r\n        case ActionTypes.SET_USER_LOGIN_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                error_message:action.error_message\r\n            }\r\n        case ActionTypes.CLEAN_LOGIN_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                error_message:\"\"\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import {combineReducers} from \"redux\"; //use to combine reducers\r\nimport accountReducer from './accountReducer';\r\nimport translateReducer from './translateReducer';\r\nimport themeReducer from './themeReducer';\r\nimport authReducer from './authReducer';\r\n\r\n//combineReducers:將reducer結合，可以將state分類呈不同的reducer然後統一包裝。\r\nconst reducers= combineReducers({\r\n    account:accountReducer,\r\n    language:translateReducer,\r\n    theme:themeReducer,\r\n    auth:authReducer\r\n\r\n});\r\n\r\nexport default reducers;\r\n","import ReactGA from 'react-ga';\r\nimport { useMemo } from \"react\";\r\n\r\nexport const eventTracker = (category, action)=>{\r\n    return ReactGA.event({\r\n        category: category,\r\n        action: action,\r\n        label: action,\r\n        value:1\r\n      })\r\n};","\r\nimport { ActionTypes } from \"../action-types/index\";\r\n\r\nexport const translate = (language)=>{\r\n    return (dispatch)=>{\r\n        dispatch({ \r\n            type:ActionTypes.SET_TOPIC_LANGUAGE,\r\n            language:language\r\n        })\r\n    }\r\n}","import { ActionTypes } from \"../action-types/index\";\r\n\r\nexport const switchMode = (theme)=>{\r\n    return (dispatch)=>{\r\n        dispatch({ \r\n            type:ActionTypes.SET_THEME_SWITCH,\r\n            theme:theme\r\n        })\r\n    };\r\n};\r\n\r\nexport const setThemeDark = ()=>{\r\n    return (dispatch)=>{\r\n        dispatch({ \r\n            type:ActionTypes.SET_THEME_DARK\r\n        })\r\n    };\r\n};\r\n\r\nexport const setThemeLight = ()=>{\r\n    return (dispatch)=>{\r\n        dispatch({ \r\n            type:ActionTypes.SET_THEME_LIGHT\r\n        })\r\n    };\r\n};\r\n\r\n","//auth is Object {auth:Boolean,user:String}\r\nimport axios from \"axios\";\r\n// import { Dispatch } from \"redux\";//for ts\r\nimport { ActionTypes } from \"../action-types/index\";\r\n\r\nconst user = {\r\n    \"gura\":{\r\n        password:\"gura123\",\r\n        avatar:\"https://upload.wikimedia.org/wikipedia/zh/e/e5/Gawr_Gura.png\"\r\n    },\r\n    \"ina\":{\r\n        password:\"ina123\",\r\n        avatar:\"https://pbs.twimg.com/profile_images/1339283318848716801/_zU72OLZ_400x400.jpg\"\r\n    },\r\n    \"ame\":{\r\n        password:\"ame123\",\r\n        avatar:\"https://memeprod.ap-south-1.linodeobjects.com/user-template/26403099e9cd2972e4275637ec865f0f.png\"\r\n    }\r\n\r\n};\r\n\r\nconst authDemo=(username,password)=>{\r\n    console.log(username)\r\n    return new Promise(( resolve, reject) =>{\r\n        if(password!==user[username].password){\r\n            reject(new Error(\"login failed\"))\r\n        }\r\n        resolve({\r\n            username: username,\r\n            avatar:user[username].avatar,\r\n            token: username+password\r\n        });\r\n    });\r\n};\r\n\r\nexport const login = (\r\n    username,password\r\n    ) => async(dispatch) =>{\r\n        try{\r\n            // const res = axios.post()\r\n            const data = await authDemo(username,password);\r\n            if(data) return dispatch({ \r\n                type:ActionTypes.SET_USER_LOGIN_SUCCESS,\r\n                username:data.username,\r\n                avatar:data.avatar,\r\n                token:data.token\r\n            });\r\n        }catch(err){\r\n            dispatch({ \r\n                type:ActionTypes.SET_USER_LOGIN_FAILED\r\n            })\r\n            dispatch({\r\n                type: ActionTypes.SET_USER_LOGIN_ERROR_MESSAGE,\r\n                error_message: \"login failed\",\r\n            });\r\n        };\r\n};\r\n\r\nexport const cleanError = ()=>({\r\n    type: ActionTypes.CLEAN_LOGIN_ERROR_MESSAGE\r\n});\r\n\r\nexport const logout=()=>({\r\n    type:ActionTypes.SET_USER_LOGOUT\r\n});\r\n","export const depositMoney = (amount)=>{\r\n    return (dispatch)=>{\r\n        dispatch({ \r\n            type:\"deposit\",\r\n            payload:amount\r\n        })\r\n    }\r\n}\r\n\r\nexport const withdrawMoney = (amount)=>{\r\n    return (dispatch)=>{\r\n        dispatch({ \r\n            type:\"withdraw\",\r\n            payload:amount\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport * from \"./translateAction\"\r\nexport * from \"./themeAction\"\r\nexport * from \"./authAction\"","import { bindActionCreators } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useMemo } from \"react\";\r\nimport  {actionCreator}  from \"../state/index\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return useMemo(() => bindActionCreators(actionCreator, dispatch), [\r\n    dispatch,\r\n  ]);\r\n};"],"sourceRoot":""}